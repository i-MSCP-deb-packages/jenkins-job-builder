- project:
    name: pecl-extensions
    pecl:
      - php-amqp
      - php-apcu
      - php-apcu-bc
      - php-gearman
      - php-geoip
      - php-gmagick
      - php-igbinary
      - php-imagick
      - php-mailparse
      - php-memcache
      - php-memcached
      - php-mongodb
      - php-msgpack
      - php-oauth
      - php-radius
      - php-redis
      - php-rrd
      - php-stomp
      - php-smbclient
      - php-solr
      - php-ssh2
      - php-uploadprogress
      - php-uuid
      - php-yac
      - php-zmq
      - php-propro
      - php-raphf
      - php-pecl-http
      - tidyways
      - xdebug
    jobs:
      - '{pecl}-source'
      - '{pecl}-binaries'
      - '{pecl}-piuparts'

- job-template:
    name: '{pecl}-source'
    project-type: matrix
    scm:
      - git:
          url: 'git://anonscm.debian.org/pkg-php/{pecl}.git'
          name: origin
          refspec: +refs/heads/*:refs/remotes/origin/*
          basedir: source
          branches:
            - master
          wipe-workspace: false
    execution-strategy:
      sequential: trueaxes
    axes:
      - axis:
          type: user-defined
          name: distribution
          values:
            - jessie
            - stretch
    builders:
      - shell: |
          rm -f ./* || true
      - shell: |
          export distribution=${{distribution}}
          /usr/bin/generate-git-snapshot
      - shell: |
          mkdir -p report
          /usr/bin/lintian-junit-report *.dsc > report/lintian.xml
    publishers:
      - archive:
          artifacts: '*.gz,*.bz2,*.xz,*.deb,*.dsc,*.git,*.changes,lintian.txt'
      - trigger:
          project: '{pecl}-binaries'
      - junit:
          results: '**/lintian.xml'
          keep-long-stdio: false
      - fingerprint:
          record-artifacts: true

- job-template:
    name: '{pecl}-binaries'
    project-type: matrix
    description: |
      <p>Build Debian binary packages of {pecl}.<br />Do not edit this job through the web, it is generated via jenkins-job-builder!</p>
      <h2>Usage instructions how to remotely access and use the repository:</h2>
      <p>Then access to this repository is available using the following sources.list entry:</p>
      <pre>
      deb     https://$jenkins_server/php/ <distribution> main
      deb-src https://$jenkins_server/php/ <distribution> main
      </pre>
    execution-strategy:
      sequential: true
    axes:
      - axis:
          type: user-defined
          name: architecture
          values:
            - amd64
            - i386
      - axis:
          type: user-defined
          name: distribution
          values:
            - jessie
            - stretch
    builders:
      - copyartifact:
          project: '{pecl}-source/distribution=${{distribution}}'
          filter: '*'
          which-build: upstream-build
          fallback-to-last-successful: true
      - shell: |
          export POST_BUILD_HOOK=/usr/bin/jdg-debc
          export release=$distribution
          export RELEASE_REPOSITORY=/srv/repository/php
          export RELEASE_DISTRIBUTION=$distribution
          /usr/bin/build-and-provide-package
      - shell: |
          export REPOSITORY=/srv/repository/php
          echo "Listing packages inside the php repository:"
          /usr/bin/repository_checker --list-repos $distribution
      - shell: |
          mkdir -p report
          /usr/bin/lintian-junit-report *.dsc > report/lintian.xml
    publishers:
      - archive:
          artifacts: '*.gz,*.bz2,*.xz,*.deb,*.dsc,*.git,*.changes,lintian.txt'
      - junit:
          results: '**/lintian.xml'
          keep-long-stdio: false
      - fingerprint:
          record-artifacts: true
      - trigger:
          project: '{pecl}-piuparts'
      - workspace-cleanup:
          dirmatch: false
    wrappers:
      - timestamps

- job-template:
    name: '{pecl}-piuparts'
    project-type: freestyle
    description: 'Installation and upgrade tests for {pecl} Debian packages.<br />Do not edit this job through the web, it is generated via jenkins-job-builder!'
    disabled: false
    parameters:
      - string:
          name: architecture
          default: amd64
          description: "Architecture that should be used."
      - string:
          name: distribution
          default: jessie
          description: "Distribution that should be used."
    builders:
      - copyartifact:
          project: '{pecl}-binaries/architecture=${{architecture}},distribution=${{distribution}}'
          filter: '*.deb'
          which-build: upstream-build
          fallback-to-last-successful: true
          flatten: true
          target: 'artifacts/'
      - shell: |
          # sadly piuparts always returns with exit code 1 :((
          sudo piuparts_wrapper ${{PWD}}/artifacts/*.deb || true
      - shell: |
          piuparts_tap piuparts.txt > piuparts.tap
    publishers:
      - tap:
          results: 'piuparts.tap'
      - archive:
          artifacts: 'piuparts.*'
      - fingerprint:
          record-artifacts: true
      - workspace-cleanup:
          dirmatch: false
    wrappers:
      - timestamps
